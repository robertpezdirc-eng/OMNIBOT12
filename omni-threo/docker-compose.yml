version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: .
      target: dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - MONGO_URI=mongodb://mongo:27017/omni_threo
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - JWT_EXPIRES_IN=7d
      - API_URL=http://localhost:3000
      - FRONTEND_URL=http://localhost:3001,http://localhost:3002
      - ADMIN_USERNAME=admin
      - ADMIN_PASSWORD=admin123
      - CORS_ORIGIN=*
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=100
      - LOG_LEVEL=debug
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - mongo
    networks:
      - omni-network
    restart: unless-stopped

  # MongoDB Database
  mongo:
    image: mongo:6.0
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=omni_threo
    volumes:
      - mongo_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - omni-network
    restart: unless-stopped

  # Admin GUI (React)
  admin:
    build:
      context: ./admin
      dockerfile: ../Dockerfile.react
    ports:
      - "3001:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:3000
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./admin:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - omni-network
    restart: unless-stopped

  # Client Panel (React)
  client:
    build:
      context: ./client
      dockerfile: ../Dockerfile.react
    ports:
      - "3002:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:3000
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - omni-network
    restart: unless-stopped

  # Redis (optional, for caching)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - omni-network
    restart: unless-stopped
    command: redis-server --appendonly yes

volumes:
  mongo_data:
  redis_data:

networks:
  omni-network:
    driver: bridge