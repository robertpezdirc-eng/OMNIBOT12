# üîπ Omni Ultimate Turbo Flow System - Docker Compose Configuration
version: '3.8'

services:
  # üóÑÔ∏è MongoDB Database
  mongodb:
    image: mongo:6.0-focal
    container_name: omni-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-omni_admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-omni_secure_2024}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-omni_ultimate}
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      - ./mongo-init:/docker-entrypoint-initdb.d:ro
      - ./logs/mongodb:/var/log/mongodb
    ports:
      - "${MONGO_PORT:-27017}:27017"
    networks:
      - omni-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # üöÄ Omni Ultimate Application
  omni-app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: omni-ultimate-app
    restart: unless-stopped
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      # üîß Osnovne nastavitve
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${PORT:-3000}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      
      # üóÑÔ∏è MongoDB konfiguracija
      MONGO_URI: mongodb://${MONGO_ROOT_USERNAME:-omni_admin}:${MONGO_ROOT_PASSWORD:-omni_secure_2024}@mongodb:27017/${MONGO_DATABASE:-omni_ultimate}?authSource=admin
      
      # üîê JWT in varnost
      JWT_SECRET: ${JWT_SECRET:-omni_ultimate_jwt_secret_2024_super_secure}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-24h}
      
      # üåê WebSocket konfiguracija
      WEBSOCKET_PORT: ${WEBSOCKET_PORT:-3001}
      WEBSOCKET_CORS_ORIGIN: ${WEBSOCKET_CORS_ORIGIN:-*}
      
      # üìß Email konfiguracija (opcijsko)
      SMTP_HOST: ${SMTP_HOST:-}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USER: ${SMTP_USER:-}
      SMTP_PASS: ${SMTP_PASS:-}
      
      # üîí SSL konfiguracija
      SSL_ENABLED: ${SSL_ENABLED:-false}
      SSL_AUTO_GENERATE: ${SSL_AUTO_GENERATE:-true}
      SSL_CERT_PATH: ${SSL_CERT_PATH:-/app/certs/server.crt}
      SSL_KEY_PATH: ${SSL_KEY_PATH:-/app/certs/server.key}
      SSL_PORT: ${SSL_PORT:-443}
      
      # üéØ License sistem
      LICENSE_ENCRYPTION_KEY: ${LICENSE_ENCRYPTION_KEY:-omni_license_encryption_2024}
      DEFAULT_LICENSE_DURATION: ${DEFAULT_LICENSE_DURATION:-30}
      
      # üìä Rate limiting
      RATE_LIMIT_WINDOW: ${RATE_LIMIT_WINDOW:-15}
      RATE_LIMIT_MAX: ${RATE_LIMIT_MAX:-100}
      
      # üîç Debug in monitoring
      DEBUG_MODE: ${DEBUG_MODE:-false}
      ENABLE_METRICS: ${ENABLE_METRICS:-true}
      
      # üîß ENV Validation
      VALIDATE_ENV_ON_STARTUP: ${VALIDATE_ENV_ON_STARTUP:-true}
      REQUIRED_ENV_VARS: ${REQUIRED_ENV_VARS:-NODE_ENV,PORT,MONGO_ROOT_USERNAME,MONGO_ROOT_PASSWORD,JWT_SECRET}
      
      # üè• Health Check & Monitoring
      HEALTH_CHECK_PATH: ${HEALTH_CHECK_PATH:-/api/health}
      
      # Docker Logs Monitoring
      MONITOR_CONTAINERS: ${MONITOR_CONTAINERS:-omni-app,mongodb,redis}
      DEBUG_LOGS: ${DEBUG_LOGS:-false}
      
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./certs:/app/certs:ro
      - ./temp:/app/temp
    ports:
      - "${PORT:-3000}:3000"
      - "${WEBSOCKET_PORT:-3001}:3001"
    networks:
      - omni-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: ${HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${HEALTH_CHECK_TIMEOUT:-10s}
      retries: ${HEALTH_CHECK_RETRIES:-3}
      start_period: ${HEALTH_CHECK_START_PERIOD:-60s}
    logging:
      driver: "json-file"
      options:
        max-size: "${LOG_MAX_SIZE:-50m}"
        max-file: "${LOG_MAX_FILES:-5}"

  # üîÑ Redis Cache (opcijsko za performance)
  redis:
    image: redis:7-alpine
    container_name: omni-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-omni_redis_2024}
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - omni-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  omni-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  redis_data:
    driver: local