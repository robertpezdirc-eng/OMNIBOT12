# IoT Production Environment Variables Template
# Omni AI Platform - Predloga za produkcijske environment variables
# 
# NAVODILA:
# 1. Kopiraj to datoteko v .env
# 2. Izpolni vse vrednosti z dejanskimi podatki
# 3. Nikoli ne commitaj .env datoteke v git!

# =============================================================================
# MQTT BROKER NASTAVITVE
# =============================================================================

# MQTT broker credentials
MQTT_USERNAME=your_mqtt_username
MQTT_PASSWORD=your_secure_mqtt_password_2024

# =============================================================================
# VARNOSTNE NASTAVITVE
# =============================================================================

# JWT Secret Key (generiraj z: python -c "import secrets; print(secrets.token_urlsafe(32))")
JWT_SECRET_KEY=your_jwt_secret_key_here_32_characters_minimum

# API Admin Key (generiraj z: python -c "import secrets; print(secrets.token_urlsafe(32))")
API_ADMIN_KEY=your_api_admin_key_here_32_characters_minimum

# Encryption Key (generiraj z: python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())")
ENCRYPTION_KEY=your_encryption_key_here_fernet_compatible

# Session Secret Key (generiraj z: python -c "import secrets; print(secrets.token_urlsafe(32))")
SESSION_SECRET_KEY=your_session_secret_key_here_32_characters

# =============================================================================
# DATABASE NASTAVITVE
# =============================================================================

# PostgreSQL Database
DB_HOST=localhost
DB_NAME=omni_iot_production
DB_USERNAME=omni_iot_user
DB_PASSWORD=your_secure_db_password_2024

# Redis Cache
REDIS_HOST=localhost
REDIS_PASSWORD=your_secure_redis_password_2024

# =============================================================================
# EMAIL / SMTP NASTAVITVE
# =============================================================================

# SMTP za alerting
SMTP_SERVER=smtp.gmail.com
SMTP_USERNAME=your_email@gmail.com
SMTP_PASSWORD=your_app_specific_password

# =============================================================================
# CLOUD BACKUP NASTAVITVE (opcijsko)
# =============================================================================

# AWS S3 Backup
BACKUP_BUCKET=omni-iot-backups
BACKUP_REGION=eu-west-1
AWS_ACCESS_KEY_ID=your_aws_access_key
AWS_SECRET_ACCESS_KEY=your_aws_secret_key

# =============================================================================
# MONITORING NASTAVITVE (opcijsko)
# =============================================================================

# Sentry za error tracking
SENTRY_DSN=https://your_sentry_dsn@sentry.io/project_id

# New Relic za performance monitoring
NEW_RELIC_LICENSE_KEY=your_new_relic_license_key

# =============================================================================
# DODATNE NASTAVITVE
# =============================================================================

# IoT Environment
IOT_ENVIRONMENT=production

# Debug mode (samo za development)
DEBUG=false

# Log level
LOG_LEVEL=INFO

# =============================================================================
# VARNOSTNI NASVETI
# =============================================================================

# 1. Generiraj močne gesla (min. 16 znakov, mešanica črk, številk, simbolov)
# 2. Uporabi različna gesla za različne storitve
# 3. Redno menjaj gesla (vsaj vsakih 90 dni)
# 4. Nikoli ne shranjuj gesel v kodi ali git repozitoriju
# 5. Uporabi environment variables ali secure vault sisteme
# 6. Omeji dostop do .env datoteke (chmod 600)
# 7. Redko preverjaj logs za sumljive aktivnosti

# =============================================================================
# GENERIRANJE VARNIH KLJUČEV
# =============================================================================

# Za generiranje varnih ključev uporabi naslednje Python ukaze:

# JWT Secret Key:
# python -c "import secrets; print('JWT_SECRET_KEY=' + secrets.token_urlsafe(32))"

# API Admin Key:
# python -c "import secrets; print('API_ADMIN_KEY=' + secrets.token_urlsafe(32))"

# Encryption Key (Fernet):
# python -c "from cryptography.fernet import Fernet; print('ENCRYPTION_KEY=' + Fernet.generate_key().decode())"

# Session Secret Key:
# python -c "import secrets; print('SESSION_SECRET_KEY=' + secrets.token_urlsafe(32))"

# Random Password (16 znakov):
# python -c "import secrets, string; chars = string.ascii_letters + string.digits + '!@#$%^&*'; print(''.join(secrets.choice(chars) for _ in range(16)))"

# =============================================================================
# PREVERJANJE NASTAVITEV
# =============================================================================

# Za preverjanje ali so vse environment variables nastavljene, zaženi:
# python omni/config/iot_config_manager.py

# =============================================================================
# DOCKER NASTAVITVE (če uporabljaš Docker)
# =============================================================================

# Docker Compose lahko prebere .env datoteko avtomatsko
# Alternativno lahko uporabiš docker-compose.override.yml za lokalne nastavitve