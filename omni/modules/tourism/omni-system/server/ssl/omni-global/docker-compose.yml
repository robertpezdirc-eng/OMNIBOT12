version: "3.9"

networks:
  omni-network:
    driver: bridge

services:
  mongo:
    image: mongo:7
    container_name: omni-mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: omni
      MONGO_INITDB_ROOT_PASSWORD: omni123
      MONGO_INITDB_DATABASE: omni
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - omni-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  server:
    build:
      context: .
      dockerfile: Dockerfile-server
    container_name: omni-server
    restart: unless-stopped
    environment:
      MONGO_URI: mongodb://omni:omni123@mongo:27017/omni?authSource=admin
      JWT_SECRET: "${JWT_SECRET:-super_secret_key_change_in_production}"
      PORT: 3000
      NODE_ENV: production
      SSL_CERT_PATH: /app/certs/fullchain.pem
      SSL_KEY_PATH: /app/certs/privkey.pem
    ports:
      - "3000:3000"
    depends_on:
      mongo:
        condition: service_healthy
    volumes:
      - ./certs:/app/certs:ro
      - server-logs:/app/logs
    networks:
      - omni-network
    healthcheck:
      test: ["CMD", "curl", "-k", "-f", "https://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  admin:
    build:
      context: .
      dockerfile: Dockerfile-admin
    container_name: omni-admin
    restart: unless-stopped
    environment:
      SERVER_URL: https://server:3000
      PORT: 4000
      NODE_ENV: production
    ports:
      - "4000:4000"
    depends_on:
      server:
        condition: service_healthy
    volumes:
      - admin-logs:/app/logs
    networks:
      - omni-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  client:
    build:
      context: .
      dockerfile: Dockerfile-client
    container_name: omni-client
    restart: unless-stopped
    environment:
      SERVER_URL: https://server:3000
      CLIENT_PORT: 5000
      NODE_ENV: production
    ports:
      - "5000:5000"
    depends_on:
      server:
        condition: service_healthy
    volumes:
      - client-logs:/app/logs
    networks:
      - omni-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: omni-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/certs:ro
      - nginx-logs:/var/log/nginx
    depends_on:
      - server
      - admin
      - client
    networks:
      - omni-network

volumes:
  mongo-data:
    driver: local
  server-logs:
    driver: local
  admin-logs:
    driver: local
  client-logs:
    driver: local
  nginx-logs:
    driver: local